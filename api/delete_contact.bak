<?php
// Iniciar sesión
session_start();

// Log para depuración
error_log("delete_contact.php - Método: " . $_SERVER['REQUEST_METHOD']);
error_log("Sesión actual: " . print_r($_SESSION, true));

// Al inicio del archivo, después de session_start()
error_log("Datos recibidos en delete_contact.php: " . print_r($_POST, true) . " GET: " . print_r($_GET, true));
$inputData = json_decode(file_get_contents('php://input'), true);
error_log("Datos JSON: " . print_r($inputData, true));

// Verificar si el usuario está autenticado
if (!isset($_SESSION['user_id'])) {
    // Log de error
    error_log("Error: Usuario no autenticado");
    
    // Responder con error
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'No autorizado']);
    exit;
}

// Obtener el ID del usuario de la sesión
$userId = $_SESSION['user_id'];
error_log("ID de usuario: $userId");

// Incluir el archivo de conexión a la base de datos
error_log("Intentando incluir el archivo de conexión: ../config/conexion.php");
try {
    require_once '../config/conexion.php';
    error_log("Archivo de conexión incluido correctamente");
} catch (Exception $e) {
    error_log("Error al incluir el archivo de conexión: " . $e->getMessage());
    
    // Responder con error
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'Error al conectar con la base de datos: ' . $e->getMessage()]);
    exit;
}

// Crear una instancia de la clase Conexion
$conexion = new Conexion();
$conn = $conexion->getConnection();

// Obtener el ID del contacto
if (isset($_GET['id'])) {
    $contactId = $_GET['id'];
} elseif (isset($_POST['id'])) {
    $contactId = $_POST['id'];
} elseif (isset($_POST['idContacto'])) {
    $contactId = $_POST['idContacto'];
} else {
    // Intentar obtener datos del cuerpo de la solicitud
    $data = json_decode(file_get_contents('php://input'), true);
    if (isset($data['id'])) {
        $contactId = $data['id'];
    } elseif (isset($data['idContacto'])) {
        $contactId = $data['idContacto'];
    } else {
        error_log("Error: No se proporcionó ID de contacto");
        
        header('Content-Type: application/json');
        echo json_encode(['success' => false, 'message' => 'Se requiere ID de contacto']);
        exit;
    }
}

error_log("ID de contacto a eliminar: $contactId");

try {
    // Verificar que el contacto pertenece al usuario
    $sql = "SELECT COUNT(*) FROM agcontactos WHERE idContacto = :id AND idUser = :user_id";
    $count = $conexion->getRow($sql, [':id' => $contactId, ':user_id' => $userId]);
    
    if (!$count || $count['COUNT(*)'] == 0) {
        error_log("Error: El contacto no pertenece al usuario o no existe");
        
        header('Content-Type: application/json');
        echo json_encode(['success' => false, 'message' => 'Contacto no encontrado o no autorizado']);
        exit;
    }
    
    // Eliminar el contacto
    $result = $conexion->delete('agcontactos', 'id = ?', [$contactId]);
    
    if ($result) {
        error_log("Contacto eliminado correctamente");
        
        // Responder con éxito
        header('Content-Type: application/json');
        echo json_encode([
            'success' => true, 
            'message' => 'Contacto eliminado correctamente'
        ]);
    } else {
        error_log("Error al eliminar el contacto");
        
        header('Content-Type: application/json');
        echo json_encode(['success' => false, 'message' => 'No se pudo eliminar el contacto']);
    }
} catch (PDOException $e) {
    error_log("Error de PDO al eliminar contacto: " . $e->getMessage());
    
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'Error en la base de datos: ' . $e->getMessage()]);
} catch (Exception $e) {
    error_log("Error general al eliminar contacto: " . $e->getMessage());
    
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'Error en el servidor: ' . $e->getMessage()]);
}
exit;